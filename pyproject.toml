[project]
name = "hairydogm"
dynamic = ["version"]
description = "Some utilities from AIOgram adapted to be used with Hydrogram."
authors = [{ name = "Hitalo" }]
dependencies = [
    "hydrogram>=0.1.4",
    "babel>=2.15.0",
    "magic-filter>=1.0.12",
    "pydantic>=2.7.1",
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
keywords = ["telegram", "bot", "asyncio", "hydrogram", "hairydogm", "aiogram"]

[tool.hatch.version]
path = "src/hairydogm/__init__.py"

[project.urls]
homepage = "https://github.com/HitaloM/hairydogm"
tracker = "https://github.com/HitaloM/hairydogm/issues"
community = "https://t.me/HitaloProjects"
source = "https://github.com/HitaloM/hairydogm"
documentation = "https://hairydogm.readthedocs.io/"

[project.optional-dependencies]
docs = [
    "Sphinx>=7.3.7",
    "furo>=2024.5.6",
    "sphinx-autobuild>=2024.4.16",
    "sphinx-copybutton>=0.5.2",
    "pygments>=2.18.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = ["pre-commit>=3.7.1", "ruff>=0.4.4"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
line-length = 99
target-version = "py312"

[tool.ruff.lint]
select = [
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "C90",  # mccabe
    "CPY",  # flake8-copyright
    "DTZ",  # flake8-datetimez
    "E",    # pycodestyle
    "EM",   # flake8-errmsg
    "F",    # pyflakes
    "FURB", # refurb
    "G",    # flake8-logging-format
    "I",    # isort
    "N",    # pep8-naming
    "PERF", # perflint
    "PL",   # pylint
    "PTH",  # flake8-use-pathlib
    "RET",  # flake8-return
    "RUF",  # ruff
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "UP",   # pyupgrade
    "W",    # pycodestyle
]
ignore = [
    "RUF001",
    "RUF002",
    "RUF003",
    "PLR0913",
    "PLR2004",
    "PLW2901",
    "PLW1641",
]
preview = true

[tool.ruff.format]
docstring-code-format = true
preview = true

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.hatch.build.targets.wheel]
packages = ["src/hairydogm"]

[tool.numpydoc_validation]
checks = [
    "all",  # report on all checks, except the below
    "GL08",
    "SA01",
    "EX01",
]
